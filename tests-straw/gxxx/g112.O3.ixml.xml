<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../lib/ixml-html.xsl"?>
<ixml xmlns:gt="http://blackmesatech.com/2020/grammartools"
      gt:date="2021-01-26T17:01:45.448721-07:00"
      gt:base-grammar="file:/Users/cmsmcq/2021/ixml-tests/tests-straw/gxxx/g112.ixml.xml"
      gt:base-grammar-uri="file:/Users/cmsmcq/2021/ixml-tests/tests-straw/gxxx/g112.ixml.xml"
      gt:dg-type="regular approximation"
      gt:ra-type="rk-subset"
      gt:k="3">
   <comment>2021-01-26T17:01:45.448721-07:00: ixml-to-rk-subset.xsl.</comment>
   <comment>    Input: file:/Users/cmsmcq/2021/ixml-tests/tests-straw/gxxx/g112.ixml.xml</comment>
   <comment>    This grammar accepts the r_3 subset </comment>
   <comment>    of the language accepted by the input grammar.</comment>
   <comment>2021-01-26T17:01:45.448721-07:00: ixml-annotate-pc.xsl.</comment>
   <comment>    Input: file:/Users/cmsmcq/2021/ixml-tests/tests-straw/gxxx/g112.ixml.xml</comment>
   <comment>    Grammar augmented with @gt:recursive etc.</comment>
   <comment> g112:  a small ixml grammar:  112

  One of a series (initially for test case construction).

  This one is an FSA with 1 nonfinal state, 1 final state, 2 arcs.
  (I'm not counting the nil arc marking A as final.)

  L is the set containing strings of one or more 'a' and
  nothing else.

</comment>
   <comment> Revisions:
  2021-01-17 : CMSMcQ : made ixml 
</comment>
   <comment> First, nonrecursive production rules </comment>
   <rule name="S" gt:recursive="false" gt:referenced="false">
      <alt>
         <literal sstring="a"/>
         <nonterminal name="A"/>
      </alt>
   </rule>
   <comment> Second, recursive production rules </comment>
   <rule name="A" gt:basename="A" gt:affix="" gt:type="stack-affixed">
      <alt>
         <literal sstring="a"/>
         <nonterminal name="A·A·" gt:basename="A" gt:affix="A·"/>
      </alt>
      <alt/>
   </rule>
   <rule name="A·A·"
         gt:basename="A"
         gt:affix="A·"
         gt:type="stack-affixed">
      <alt>
         <literal sstring="a"/>
         <nonterminal name="A·A·A·" gt:basename="A" gt:affix="A·A·"/>
      </alt>
      <alt/>
   </rule>
   <rule name="A·A·A·"
         gt:basename="A"
         gt:affix="A·A·"
         gt:type="stack-affixed">
      <alt>
         <literal sstring="a"/>
         <nonterminal name="A·A·A·A·" gt:basename="A" gt:affix="A·A·A·"/>
      </alt>
      <alt/>
   </rule>
   <rule name="A·A·A·A·"
         gt:basename="A"
         gt:affix="A·A·A·"
         gt:type="stack-affixed">
      <alt>
         <literal sstring="a"/>
         <nonterminal name="A·A·A·A·A·" gt:basename="A" gt:affix="A·A·A·A·"/>
      </alt>
      <alt/>
   </rule>
   <rule name="A·A·A·A·A·"
         gt:basename="A"
         gt:affix="A·A·A·A·"
         gt:type="stub">
      <alt>
         <nonterminal name="max-A"/>
      </alt>
   </rule>

   <rule name="max-A" gt:recursive="true">
      <alt>
         <repeat0>
            <alts>
               <alt>
                  <literal sstring="a"/>
               </alt>
            </alts>
         </repeat0>
      </alt>
   </rule>

   <comment> bye </comment>
</ixml>
