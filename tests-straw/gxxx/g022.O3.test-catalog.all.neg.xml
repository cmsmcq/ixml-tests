<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../lib/testcat-html.xsl"?>
<test-catalog xmlns="https://github.com/cmsmcq/ixml-tests"
              xmlns:gt="http://blackmesatech.com/2020/grammartools"
              name="file:/Users/cmsmcq/2021/ixml-tests/tests-straw/gxxx/g022.ixml.xml"
              release-date="2021-01-26"
              gt:date="2021-01-26T19:02:32.702725-07:00">
   <description>
      <p>This test catalog describes tests for the language defined by file:/Users/cmsmcq/2021/ixml-tests/tests-straw/gxxx/g022.ixml.xml.</p>
      <p>Test polarity:  negative.</p>
      <p>Test selection:  state state-final arc arc-final.</p>
   </description>
   <test-set>
      <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
      <description>
         <p>This test set was generated by Gingersnap.</p>
         <p>Test polarity: see the indivicual tests.</p>
         <p>Test selection: see the individual tests.</p>
         <p>Test pipeline: approximation + FSA + tests.</p>
      </description>
      <vxml-grammar>
         <ixml xmlns="">
            <comment> g022:  a small ixml grammar:  022

  One of a series (initially for test case construction).

  This one is an FSA with 0 nonfinal states, 2 final states, 2 arcs.
  
  L is the set of strings with alternating a and b, length &gt;= 0.

</comment>
            <comment> Revisions:
  2021-01-17 : CMSMcQ : made ixml 
</comment>
            <rule name="S">:  <comment>nil</comment>
               <alt/>
               <alt>
                  <literal sstring="a"/>
                  <nonterminal name="A"/>
               </alt>. 
</rule>
            <rule name="A">:  <comment>nil</comment>
               <alt/>
               <alt>
                  <literal sstring="b"/>
                  <nonterminal name="S"/>
               </alt>.</rule>
         </ixml>
      </vxml-grammar>
      <vxml-grammar-ref href="file:/Users/cmsmcq/2021/ixml-tests/tests-straw/gxxx/g022.ixml.xml"/>
      <test-case xml:id="state-neg-S_0"
                 gt:polarity="negative"
                 gt:trace="S_0 . 2 / S_0 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#E7FF"></test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-S_0"
                 gt:polarity="negative"
                 gt:trace="S_0 . 2 / S_0 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#22493">𢒓</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-S_0"
                 gt:polarity="negative"
                 gt:trace="S_0 . 2 / S_0 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#20 #61"> a</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-S_0"
                 gt:polarity="negative"
                 gt:trace="S_0 . 2 / S_0 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#68B">ڋ</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #1AE4D">a𚹍</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #E11A">a</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #63 #62">acb</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #63">ac</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #744">ab݄</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #173EE">ab𗏮</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #5DD #61">abםa</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #21">ab!</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #E0E2">aba</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #22">aba"</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #E000 #62">abab</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #E0B1">aba</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #22">abab"</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #15FB4">abab𕾴</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #E000 #61">ababa</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #10FFFF">abab􏿿</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #562">ababaբ</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #E0B3">ababa</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #1550B #62">ababa𕔋b</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #15095">ababa𕂕</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #1590C">ababab𕤌</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #154D5">ababab𕓕</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #10001 #61">ababab𐀁a</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #E09B">ababab</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S·A·S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #21">abababa!</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S·A·S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #21">abababa!</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S·A·S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #20 #62">abababa b</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-S·A·S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #20">abababa </test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·A·S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #E0A0">abababab</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·A·S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #14D20">abababab𔴠</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·A·S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #21 #61">abababab!a</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-A·S·A·S·A·S·A·S·_1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #427">ababababЧ</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-max-S_1˅max-S_3"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #14C91">ababababa𔲑</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-max-S_1˅max-S_3"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #E094">ababababa</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-max-S_1˅max-S_3"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #63 #62">ababababacb</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-max-S_1˅max-S_3"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #406">ababababaІ</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-max-S_2"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 . 1 / m-max-S_2 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #62 #43F #61">abababababпa</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-max-S_2"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 . 1 / m-max-S_2 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #62 #21">ababababab!</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-max-S_2"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 . 1 / m-max-S_2 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #62 #E08A">ababababab</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="state-neg-m-max-S_2"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 . 1 / m-max-S_2 + error ">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #62 #60">ababababab`</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-S_0˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 2 / S_0 + S_0˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#105FA">𐗺</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-S_0˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 2 / S_0 + S_0˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#20"> </test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-S_0˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 2 / S_0 + S_0˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#B1 #62">±b</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-S_0˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 2 / S_0 + S_0˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#FFFD">�</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 + m-S_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62">ab</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 + m-S_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #20">a </test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 + m-S_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #10AE9 #61">a𐫩a</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 + m-S_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #10ABE">a𐪾</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 + m-A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #20">ab </test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 + m-A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #E01F">ab</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 + m-A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #20 #62">ab b</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 + m-A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #10FFFF">ab􏿿</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 + m-S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #E028">aba</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 + m-S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #20">aba </test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 + m-S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #E026 #61">abaa</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 + m-S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #E000">aba</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 + m-A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #63">ababc</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 + m-A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #20">abab </test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 + m-A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #11682 #62">abab𑚂b</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 + m-A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #20">abab </test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 + m-S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #11A1F">ababa𑨟</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 + m-S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #20">ababa </test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 + m-S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #1B7 #61">ababaƷa</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 + m-S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62">ababab</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 + m-A·S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #E039">ababab</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 + m-A·S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #E000">ababab</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 + m-A·S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #E037 #62">abababb</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 + m-A·S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #D7FF">ababab퟿</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S·A·S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 + m-S·A·S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #20">abababa </test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S·A·S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 + m-S·A·S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #20">abababa </test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S·A·S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 + m-S·A·S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #20 #61">abababa a</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-S·A·S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 + m-S·A·S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #20">abababa </test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·A·S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 + m-A·S·A·S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #12049">abababab𒁉</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·A·S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 + m-A·S·A·S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #21">abababab!</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·A·S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 + m-A·S·A·S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #209 #62">ababababȉb</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-A·S·A·S·A·S·A·S·_1˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 + m-A·S·A·S·A·S·A·S·_1˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #FFFD">abababab�</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-max-S_1˅max-S_3˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 + m-max-S_1˅max-S_3˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #228 #61">ababababaȨa</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-max-S_1˅max-S_3˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 + m-max-S_1˅max-S_3˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #220">ababababaȠ</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-max-S_1˅max-S_3˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 + m-max-S_1˅max-S_3˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #21">ababababa!</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-max-S_1˅max-S_3˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 + m-max-S_1˅max-S_3˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #10001">ababababa𐀁</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-max-S_2˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 . 1 / m-max-S_2 + m-max-S_2˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #62 #20">ababababab </test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-max-S_2˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 . 1 / m-max-S_2 + m-max-S_2˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #62 #E044">ababababab</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-max-S_2˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 . 1 / m-max-S_2 + m-max-S_2˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #62 #21 #62">ababababab!b</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
      <test-case xml:id="arc-neg-m-max-S_2˃1"
                 gt:polarity="negative"
                 gt:trace="S_0 . 1 / m-S_1 . 1 / m-A·S·_1 . 1 / m-S·A·S·_1 . 1 / m-A·S·A·S·_1 . 1 / m-S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·_1 . 1 / m-S·A·S·A·S·A·S·_1 . 1 / m-A·S·A·S·A·S·A·S·_1 . 1 / m-max-S_1˅max-S_3 . 1 / m-max-S_2 + m-max-S_2˃1 + error">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string gt:hex="#61 #62 #61 #62 #61 #62 #61 #62 #61 #62 #12135">ababababab𒄵</test-string>
         <result>
            <assert-not-a-sentence/>
         </result>
      </test-case>
   </test-set>
</test-catalog>
