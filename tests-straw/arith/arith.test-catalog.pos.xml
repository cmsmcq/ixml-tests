<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../lib/testcat-html.xsl"?>
<test-catalog xmlns="https://github.com/cmsmcq/ixml-tests"
              xmlns:gt="http://blackmesatech.com/2020/grammartools"
              name="arith.ixml.xml"
              release-date="2021-01-26"
              gt:date="2021-01-26T19:40:56.624765-07:00">
   <description>
      <p>This test catalog describes tests for the language defined by arith.ixml.xml.</p>
   </description>
   <test-set>
      <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
      <description>
         <p>This test set was generated by Gingersnap.</p>
         <p>Test polarity: see the individual tests.</p>
         <p>Test pipeline: unroll + dnf + parsetree matrices + tests.</p>
      </description>
      
      <vxml-grammar-ref href="arith.ixml.xml"/>
      
      <test-case xml:id="expr-1">
         <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
         <test-string>1</test-string>
         <result>
            <assert-xml>
               <expr xmlns="">
                  <term>
                     <factor>
                        <num>
                           <digit>1</digit>
                        </num>
                     </factor>
                  </term>
               </expr>
            </assert-xml>
         </result>
         <app-info>
            <raw-parse-tree>
               <expr xmlns="">
                  <term>
                     <factor>
                        <num>
                           <digit>
                              <gt:character hex="31">1</gt:character>
                           </digit>
                        </num>
                     </factor>
                  </term>
               </expr>
            </raw-parse-tree>
         </app-info>
      </test-case>
      <test-case xml:id="expr-1">
        <created by="Gingersnap (CMSMcQ)" on="2021-01-26"/>
	<description>
	  <p>This second test case illustrates a curious feature of
	  the current test-generation pipeline for positive tests: the
	  initial construction tries to build a complete tree, but
	  fails: the tree keeps growing but is not terminated, until
	  the generator stops because the partial parse-tree has grown
	  too large.</p>
	  <p>The result is that the test case is much larger than
	  it needs to be.</p>
	</description>
         <test-string>b×( [{ 	
{
 	a}}])/	[	{000. /a	×
( 	
000.9 ×   a   *(
 	a)
 	+
[
 	a] 	
+ 	
{
 	a}   * 000.0   ×   a) 	
+[(
 	a)] 	
+ {[
 	a]/{
 	a}* 090.0-a+ (
 	a)×   [
 	z] ÷{
 	z}} ÷	
 000.9	
 *z} /	9.0
* 	
a+
 	(
( 090.0))
+[ [	a / (
 	a) ×   [
 	z]-	
 {
 	a}	-000.0   ×a   * (
 	z)]	
 ×	{
 	[
 	a]}
 	×
 	000.000	
 +	
 z-(
 	{
 	a}   *   090.0*a
+ (
 	a)	+
 	[
 	a]* {
 	a}*   000.0)*[a]×
{(
 	z) /[
 	z] / {
 	a}
 	+090.0
 	+
a ×   (
 	a)   ×[
 	z]}] 	
×{	
 9} 	
× 9.000]+{
 	a}+ 0.×
 	a
*(
 	(	
 z× 	
(
{
 	a}) ×[ 090.0   × a   ×   (
 	a) 	
+ 	
[
 	a]+{
 	a}/000.0* a]+	{	
 (
 	a)}+
 	0.	÷
a /	
 (	
 [
 	z]*   {
 	a} /090.0- a-	
 (
 	a) * [
 	a] /   {
 	a}))	
 *	
 [[090.0]]×{{a   ×(
 	a)   × [
 	a]	-{
 	z}
+ 000.0   ×   a*(
 	a)}	
 *0.0	
 *	a
-(	[
 	a]) -	[
{
 	a}* 000.0*   a	-
 	(
 	a)
 	+[
 	a] /{
 	a} / 000.9]
 	*
 	{ 	
a}×0.909} -	909
+ 	
a÷	(	a)÷
 	[
( 	
(
 	a) ×   [
 	z]   ×{
 	a}
 	+
000.0 	
+ 	
a   * (
 	a)   ×   [
 	a])/
[{
 	a}]÷ 	
{000.0/a/ (
 	a)+[
 	a]+ {
 	a}×   000.0 ÷a}
- 	
000 	
+a /( (
 	a))	*
[	[
 	a] * {
 	a} /   000.9+	
 a	-(
 	z)   ×[
 	a]   × {
 	a}]])</test-string>
         <assert-xml-ref href="external/expr-1.ast.xml"/>
         <app-info>
            <raw-parse-tree-ref href="external/expr-1.raw-parse-tree.xml"/>
         </app-info>
      </test-case>
   </test-set>
</test-catalog>
