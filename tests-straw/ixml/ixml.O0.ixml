{ Regular superset of ixml grammar, which does not enforce
  parenthesis matching or (inner) brace matching for 
  comments.  Constructed manually.

  Revisions:
  2021-01-27 : CMSMcQ : merge inclusion and exclusion,
                        merge repeats and option
  2021-01-27 : CMSMcQ : initial version, Kleene stars on
                        () around alts (in factor),
                        manual hack to definition of 
                        comment. 
}

         ixml: S, rule+.

           -S: (whitespace; comment)*.
  -whitespace: -[Zs]; tab; lf; cr.
         -tab: -#9.
          -lf: -#a.
          -cr: -#d.
      comment: -"{", (cchar; ["{}"])*, -"}".
       -cchar: ~["{}"].

         rule: (mark, S)?, name, S, ["=:"], S, -alts, ".", S.
        @mark: ["@^-"].
         alts: alt+([";|"], S).
          alt: term*(",", S).
        -term: factor;
               optrepeat.
      -factor: terminal;
               nonterminal;
               "("*, S, alts, ")"*, S
	       { second change here }
	       .
    optrepeat: factor, (["*+"], S, sep?; "?", S).
          sep: factor.
  nonterminal: (mark, S)?, name, S.

    -terminal: literal; 
               charset.
      literal: quoted;
               encoded.
      -quoted: (tmark, S)?, -string.

        @name: namestart, namefollower*.
   -namestart: ["_"; Ll; Lu; Lm; Lt; Lo].
-namefollower: namestart; ["-.·‿⁀"; Nd; Mn].

       @tmark: ["^-"].
       string: -'"', dstring, -'"', S;
               -"'", sstring, -"'", S.
     @dstring: dchar+.
     @sstring: schar+.
        dchar: ~['"'];
               '"', -'"'. {all characters, quotes must be doubled}
        schar: ~["'"];
               "'", -"'". {all characters, quotes must be doubled}
     -encoded: (tmark, S)?, -"#", @hex, S.
          hex: ["0"-"9"; "a"-"f"; "A"-"F"]+.

       charset: (tmark, S)?, ("~", S)?, set.
         -set: "[", S,  member+([";|"], S), "]", S.
      -member: literal;
               range;
               class.
        range: from, "-", S, to.
        @from: character.
          @to: character.
   -character: -'"', dchar, -'"', S;
               -"'", schar, -"'", S;
               "#", hex, S.
        class: @code.
         code: letter, letter, S.
      -letter: ["a"-"z"; "A"-"Z"].