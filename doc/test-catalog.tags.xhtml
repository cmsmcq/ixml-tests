<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Tag set description</title>
    <style type="text/css">div.unknown {
    margin: 0 1em;
    color: red;
}
span.gi, span.att {
    font-family: monospace;
    color: blue;
}
span.label {
    font-weight: bold;
}
span.mentioned {
    font-style: italic;
}
div.front {
    text-align: center;
    padding: 2em;;
    border-bottom: 1px solid black;
}
div.docAuthor {
    font-size: larger;
}
div.elementSpec {
    margin-top: 2em;
}
div.spec-content {
    margin-left: 30%;
}
div.spec-content &gt; div {
    margin-bottom: 1em;
}
h3.spec-label {
    border-bottom: 1px solid #884444;
    padding-right: 72%;
    padding-top: 0.5em;
    padding-bottom: 0.5em;
    margin-bottom: 1.0em;
    color: maroon;
    text-align: right;
}
div.exemplum {
    background-color:  #EEDDAA;
    padding: 0.5em 1.0em;
}
span.attname {
    font-style: italic;
}
span.attname:before {
    content: '@';
}
</style>
  </head>
  <body>
    <div class="TEI">
  
  <div class="text">
    <div class="front">
      <div class="titlePage">
	<h1 class="docTitle">
	  <span class="titlePart">XML elements for ixml test catalogs</span>
	</h1>
	<div class="docAuthor">C. M. Sperberg-McQueen</div>
	<div class="docDate">7 November 2021</div>
      </div>
    </div>
    <div class="body">
      <div class="div" id="intro">
	<h2>Introduction</h2>
	<p>This document lists the elements in an XML vocabulary for
	ixml test catalogs and test-result reports, giving a short
	description of each.  (Fulller description and discussion
	may be added later if felt to be needed; for now this is
	mostly an alphabetical reference list to explain what the
	elements are intended to mean and how they are to be used.)</p>
	<p>The vocabulary described was developed by C. M. Sperberg-McQueen
	as a proposal for the invisible-XML Community Group at the
	World Wide Web Consortium, but it has not yet been considered
	by the group, still less adopted, and it has no official status
	of any kind.</p>
	<p>The vocabulary describes two different types of document:
	<ul>
	  <li>
	    <p>Test catalogs describe a potentially complex set of
	    test cases for an invisible XML processor; they can
	    be organized internally into multiple sets of test cases,
	    and test sets can nest.</p>
	    <p>Each test set may specify an ixml grammar in either
	    ixml or XML form, together with a set of test cases and
	    optionally nested test sets.  An optional
	    <span class="gi">grammar-test</span> elememt signals that the grammar
	    itself should be regarded as a test case and identifies
	    the expected result of processing the grammar.</p>
	    <p>Each test case in a test set supplies input to be
	    parsed against the grammar for the test set, and
	    specifies a result.</p>
	    <p>Grammars and test-case input can be given inline
	    or in separate files.  The expected results can also
	    be given inline or externally.</p>
	  </li>
	  <li>
	    <p>Test reports describe the results of running a
	    given processor against the tests in a test catalog.</p>
	    <p>A metadata section provides information about the
	    test catalog used and the processor tested.  Then,
	    for each test set and test case, the result produced
	    by the processor is reported and whether it is or is not
	    the result expected in the test catalog.</p>
	  </li>
	</ul></p>
	<p>A sample test catalog is given in the <span class="code">doc</span>
	directory of the ixml-tests Git repository (where this
	document is also to be found).
	</p>
      </div>
      
      <div class="div" id="issues">
	<h2>Known issues</h2>
	<p>Among the shortcomings of the current state of the
	test catalog schema are these.</p>
	<p id="ambiguity"><span class="label">Treatment of ambiguous
	sentences.</span> An ambiguous sentence has more than one
	parse tree; the current model for <span class="gi">result</span> allows only
	one to be specified.  Since the choice of which tree to return
	is implementation-dependent (or possibly
	implementation-defined), a correct implementation may easily
	produce a parse tree which is correct but does not match the
	parse tree specified in the test case.</p>
	<p>Possible remediations:
	<ul>
	  <li>
	    <p>Allow multiple parse trees with the meaning being that
	    if the processor produces any of them, it passes that
	    test.  Drawback: in some cases the set of correct parse
	    trees cannot be listed in a finite enumeration.</p>
	  </li>
	  <li>
	    <p>Allow an assertion about the result, expressed in
	    XPath.  This is the approach taken in the QT test suite
	    and in XSpec. Drawback: unless the assertion is very
	    thorough, the test case will not fully specify the
	    required test result, allowing incorrect results to pass
	    the test.</p>
	  </li>
	  <li>
	    <p>Allow a set of assertions about the result, expressed
	    in XPath.  To pass the test, a processor's result must
	    satisfy all assertions.  Drawback: as before, though it's
	    easier to be thorough.</p> 
	  </li>	  
	  <li>
	    <p>Allow an and/or tree of assertions about the result,
	    expressed in XPath.  To pass the test, a processor's
	    result must satisfy all children of an <span class="gi">and</span> and at
	    least one child of an <span class="gi">or</span>.  Drawback: logical
	    conjunction and disjunction are already built in to XPath
	    so it's not really necessary to provide a new set of
	    machinery for the purpose.</p>
	  </li>
	</ul>
	</p>
      </div>
      
      <div class="div" id="elements">
	<h2>Element reference list</h2>
	
	<div class="elementSpec"><h3 class="spec-label element">app-info</h3><div class="spec-content">
	  <div class="block gloss">(i.e. application information)</div>
	  <div class="desc">includes information needed by any
	  application which is to process the
	  test catalog; this is an extension mechanism
	  to allow the inclusion of arbitrary XML
	  elements in the catalog.  May occur
	  wherever metadata is allowed:
	  as a child of <span class="gi">test-catalog</span>,
	  <span class="gi">test-set</span>,
	  <span class="gi">test-case</span>, etc.</div>
	  <div class="exemplum">
	    <p>The process by which a test case is generated may
	    produce, as a side effect, a <span class="soCalled">‘raw parse
	    tree’</span> in which all nonterminals are
	    present.  This can be helpful in diagnosing
	    problems in an ixml parser, so it may be thought
	    useful to record the raw parse tree, even though
	    there is no standard place for it in the schema.
	    The following example shows a raw parse tree
	    embedded in a test case.</p>
	    <div class="eg"><pre>
      &lt;test-case xml:id="S-1" name="S1"&gt;
         &lt;created by="Gingersnap (CMSMcQ)" on="2021-01-26"/&gt;
         &lt;test-string/&gt;
         &lt;result&gt;
            &lt;assert-xml&gt;
               &lt;S/&gt;
            &lt;/assert-xml&gt;
         &lt;/result&gt;
         &lt;app-info&gt;
            &lt;raw-parse-tree xmlns=""&gt;
               &lt;S/&gt;
            &lt;/raw-parse-tree&gt;
         &lt;/app-info&gt;
      &lt;/test-case&gt;</pre></div>
	  </div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">assert-not-a-sentence</h3><div class="spec-content">
	  <div class="desc">signals that the test input is not
	  a sentence in the language described by the
	  grammar indicated; correct behavior in this
	  case is to report that the input cannot be
	  parsed using the grammar and optionally
	  describe the nature of the problem.</div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>Appears as child of <span class="gi">result</span>.</p>
	    <p>The spec does not require a particular
	    way of signaling failure to parse the input,
	    so each processor may require a different
	    setup.</p>
	    <p>This element can contain any elements of the
	    <span class="code">metadata</span> class (so: <span class="gi">description</span>,
	    <span class="gi">app-info</span>, <span class="gi">doc</span>), which leads to a lack of
	    parallelism with <span class="gi">assert-xml</span> and
	    <span class="gi">assert-xml-ref</span>.  Remove?</p>
	  </div>
	</div></div>

	<div class="elementSpec"><h3 class="spec-label element">assert-xml</h3><div class="spec-content">
	  <div class="desc">signals that the test input is a sentence in the
	  language described by the grammar indicated and contains the
	  prescribed XML representation of one parse of the
	  sentence.</div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>Appears as child of <span class="gi">result</span>.</p>
	    <p>For ambiguous sentences, more than one parse is
	    correct, and a conforming processor is not guaranteed to
	    produce the one indicated.  Some adjustment in the schema
	    is required to handle this situation; see list of <a class="ref" href="#ambiguity">known problems</a>.</p>
	  </div>
	</div></div>

	<div class="elementSpec"><h3 class="spec-label element">assert-xml-ref</h3><div class="spec-content">
	  <div class="desc">signals that the test input is a sentence in the
	  language described by the grammar indicated and give a URI
	  for the prescribed XML representation of one parse of the
	  sentence.</div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>Appears as child of <span class="gi">result</span>.</p>
	    <p>The treatment of ambiguous test cases is a <a class="ref" href="#ambiguity">known problem</a>.</p>
	  </div>
	</div></div>

	<div class="elementSpec"><h3 class="spec-label element">code</h3><div class="spec-content">
	  <div class="desc">marks inline code fragments in prose.</div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>Typical typographic treatment is to display in a
	    monospaced font.</p>
	  </div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">created</h3><div class="spec-content">
	  <div class="desc">a metadata element containing information about
	  the creation of a test catalog, test set, or test case.</div>
	  <div class="attList"><p><b>Attributes</b></p>
	    <div class="attDef"><p><span class="attname">who</span></p>
	      <div class="desc">specifies who created the item.</div>
	    </div>
	    <div class="attDef"><p><span class="attname">when</span></p>
	      <div class="desc">specifies the date the item was created.</div>
	    </div>
	  </div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>Perhaps should be optional on individual test cases and
	    grammar tests.  The current design is based on the idea
	    that once a set of tests is created, further tests are
	    often added to it, and that individual tests often have
	    very different revision histories.  When trying to
	    answer questions that arise as a result, it's helpful if
	    every test case has a complete revision history.</p>
	    <p>When tests are generated automatically or in bulk, it's
	    easy enough to specify a creation date for each test case;
	    when test cases are created by hand, it gets tedious.  For
	    now, I'm keeping it.</p>
	  </div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">description</h3><div class="spec-content">
	  <div class="desc">contains a sequence of paragraphs containing a
	  natural-language description of a test catalog, test set, or
	  test case.</div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">doc</h3><div class="spec-content">
	  <div class="desc">refers to external documentation for the test catalog,
	  test set, or test case, if there is any.</div>
	  <div class="attList"><p><b>Attributes</b></p>
	    <div class="attDef"><p><span class="attname">href</span></p>
	      <div class="desc">contains a URI at which the external documentation
	      can be found.</div>
	    </div>
	  </div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>If a test case exhibits a particularly tricky situation
	    which has been extensively discussed or analysed by
	    the community group (or anyone else), for example, it's
	    helpful to be able to provide pointers instead of having
	    to reproduce the discussion inside the test catalog,
	    or omitting it entirely.</p>
	  </div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">emph</h3><div class="spec-content">
	  <div class="desc">marks emphasized text in prose.</div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>This element is intended to mark rhetorical emphasis or
	    stress, not arbitrary special typographic treatment.  (If
	    we turn out to need markup for arbitrary typographic
	    treatment, we'll want to introduce <span class="gi">hi</span> for
	    typographic highlighting, or <span class="gi">seg</span> or <span class="gi">span</span>
	    with a <span class="att">style</span> or <span class="att">rendering</span>
	    element.)</p>
	  </div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">grammar-test</h3><div class="spec-content">
	  <div class="desc">indicates that the grammar associated with a given
	  test set should be treated as a test case as an instance of
	  the ixml grammar for ixml grammars; contains a
	  <span class="gi">result</span> element indicating expected result of the
	  test.</div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>A child of <span class="gi">test-set</span>.</p>
	    <p>In the simple case, the grammar is given in an
	    <span class="gi">ixml-grammar</span> element or pointed to with an
	    <span class="gi">ixml-grammar-ref</span> element; in this case the
	    grammar should be parsed with the grammar for ixml and the
	    result compared with the expected result.  If the grammar
	    given is in XML, the processor should check it for
	    validity as an ixml grammar elements indicating the
	    expected results.</p>
	    <p>Note, however, that at the time this is written the
	    ixml spec does not describe in detail what requirements
	    must be met by a grammar in XML form.</p>
	  </div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">ixml-grammar</h3><div class="spec-content">
	  <div class="desc">contains a grammar in ixml form.</div>
	  <div class="exemplum">
	    <p>The following example shows an ixml grammar for
	    arithmetic expressions.
	    </p>
	    <div class="eg"><pre>     &lt;ixml-grammar&gt;
{ Grammar for simple arithmetic expressions, for testing of test-case
  generation and grammar-manipulation tools.

  Revisions:
  2020-12-30 : CMSMcQ : made grammar
}
expr: s*, term+addop.
term:  factor+mulop.
factor:  num; var; '(', expr, ')'; '[', expr, ']'; '{', expr, '}'.
num:  digit+, ('.', digit*)?.
var:  ['a'-'z'].
addop: s*, ["+-"], s*.
mulop: s*, ["*/×÷"], s*.
digit: ['0'-'9'].
s: #20; #9; #a.       
     &lt;/ixml-grammar&gt;
</pre></div>
	  </div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>Appears as a child of <span class="gi">test-set</span> and gives
	    the grammar for the test cases of the set.</p>
	    <p>The grammar for a test set may be given in any of
	    several ways:
	    <ul>
	      <li>
		<p>in ixml form inline, using an <span class="gi">ixml-grammar</span>
		element, or</p>
	      </li>
	      <li>		
		<p>in ixml form in an external resource, using an
		<span class="gi">ixml-grammar-ref</span> element, or</p>
	      </li>
	      <li>
		<p>in XML form inline, using the <span class="gi">vxml-grammar</span>
		element, or</p>
	      </li>
	      <li>
		<p>in XML form in an external resource, using the
		<span class="gi">vxml-grammar-ref</span> element.</p>
	      </li>
	    </ul>
	    Here, <span class="mentioned">vxml</span> is short for
	    <span class="gloss">‘visible XML’</span>, as distinct from
	    <span class="gloss">‘invisible XML’</span>.</p>
	  </div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">ixml-grammar-ref</h3><div class="spec-content">
	  <div class="block gloss">(i.e. reference to an external grammar in ixml form)</div>
	  <div class="desc">points to an external resource containing
	  an ixml grammar.</div>
	  <div class="attList"><p><b>Attributes</b></p>
	    <div class="attDef"><p><span class="attname">href</span></p>
	      <div class="desc">contains a URI at which the external grammar
	      can be found.</div>
	    </div>
	  </div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>Appears as a child of <span class="gi">test-set</span> and gives
	    the grammar for the test cases of the set.</p>
	    <p>The grammar for a test set may be given in any of
	    several ways:
	    <ul>
	      <li>
		<p>in ixml form inline, using an <span class="gi">ixml-grammar</span>
		element, or</p>
	      </li>
	      <li>		
		<p>in ixml form in an external resource, using an
		<span class="gi">ixml-grammar-ref</span> element, or</p>
	      </li>
	      <li>
		<p>in XML form inline, using the <span class="gi">vxml-grammar</span>
		element, or</p>
	      </li>
	      <li>
		<p>in XML form in an external resource, using the
		<span class="gi">vxml-grammar-ref</span> element.</p>
	      </li>
	    </ul>
	    Here, <span class="mentioned">vxml</span> is short for
	    <span class="gloss">‘visible XML’</span>, as distinct from
	    <span class="gloss">‘invisible XML’</span>.</p>
	  </div>
	</div></div>
	<div class="elementSpec"><h3 class="spec-label element">modified</h3><div class="spec-content">
	  <div class="desc">contains an entry in the change log for a test case
	  or test set describing a modification.</div>
	  <div class="attList"><p><b>Attributes</b></p>
	    <div class="attDef"><p><span class="attname">change</span></p>
	      <div class="desc">describes the change.</div>
	    </div>
	    <div class="attDef"><p><span class="attname">who</span></p>
	      <div class="desc">specifies who made the change.</div>
	    </div>
	    <div class="attDef"><p><span class="attname">when</span></p>
	      <div class="desc">specifies the date the change was made.</div>
	    </div>
	  </div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p/>
	  </div>
	</div></div>
	<div class="elementSpec"><h3 class="spec-label element">p</h3><div class="spec-content">
	  <div class="desc">a paragraph of natural-language prose.</div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>A very small number of phrase-level elements
	    are provided for the markup of the prose; if the
	    set proves inconveniently small, it can easily be
	    grown.</p>
	  </div>
	</div></div>
	<div class="elementSpec"><h3 class="spec-label element">result</h3><div class="spec-content">
	  <div class="desc">specifies the expected result of a test,
	  using the <span class="gi">assert-xml</span>, <span class="gi">assert-xml-ref</span>
	  or the <span class="gi">assert-not-a-sentence</span> elements
	  depending on what is to be asserted and how.</div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>The current design does not deal well with
	    test cases for which multiple correct results are
	    possible; see <a class="ref" href="#ambiguity">above</a>.</p>
	  </div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">test-case</h3><div class="spec-content">
	  <div class="desc">contains input and expected result for one test
	  case.</div>
	  <div class="attList"><p><b>Attributes</b></p>
	    <div class="attDef"><p><span class="attname">name</span></p>
	      <div class="desc">a name by which the test case can be referred
	      to; should be unique within the test set</div>
	    </div>
	  </div>
	  <div class="exemplum">
	    <p>The following example shows a test case for the grammar
	    <span class="code">S: {nil}.</span> (not shown, because it's specified
	    earlier in the catalog).  The input is the empty string,
	    as specified here by the <span class="gi">test-string</span> element.
	    The expected output is an empty <span class="gi">S</span> element, as
	    specified here by the <span class="gi">assert-xml</span> element within
	    <span class="gi">result</span>.</p>
	    <div class="eg"><pre>      &lt;test-case xml:id="S-1" name="S1"&gt;
         &lt;created by="Gingersnap (CMSMcQ)" on="2021-01-26"/&gt;
         &lt;test-string/&gt;
         &lt;result&gt;
            &lt;assert-xml&gt;
               &lt;S/&gt;
            &lt;/assert-xml&gt;
         &lt;/result&gt;
      &lt;/test-case&gt;</pre></div>
	  </div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>A processor being tested should parse the specified
	    input using the grammar supplied by a containing
	    <span class="gi">test-set</span> element.  The processor passes the test
	    if the processor's output matches the expected result
	    (specified in the <span class="gi">result</span> element).</p>
	  </div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">test-catalog</h3><div class="spec-content">
	  <div class="desc">contains a collection of test cases organized into one
	  or more test sets and released at the same time.</div>
	  
	  <div class="attList"><p><b>Attributes</b></p>
	    <div class="attDef"><p><span class="attname">name</span></p>
	      <div class="desc">a name by which the collection of tests can be
	      referred to</div>
	    </div>
	    <div class="attDef"><p><span class="attname">release-date</span></p>
	      <div class="desc">date of the test suite described by this
	      catalog; more specifically, date of its release
	      or official publication</div>
	    </div>
	  </div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>When a suite of related tests is published, it may
	    happen that there are different test-catalog files (and
	    <span class="gi">test-catalog</span> elements) for different groups of
	    tests within the larger collection.  It is a good idea for
	    there to be one test catalog that includes all of the
	    others, so as to provide a single point of entry for
	    processing the entire collection of tests.  The
	    <span class="gi">test-set-ref</span> element is used to include other
	    test-catalog files.</p>
	  </div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">test-set</h3><div class="spec-content">
	  <div class="desc">a set of test cases, nested test sets, or both.</div>
	  <div class="attList"><p><b>Attributes</b></p>
	    <div class="attDef"><p><span class="attname">name</span></p>
	      <div class="desc">a name by which the test set can be referred
	      to; should be unique within the test catalog</div>
	    </div>
	  </div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>In the simple case, a test set specifies a grammar and
	    a set of input strings to be parsed using that grammar.
	    There are several ways to specify the grammar (ixml or
	    XML, inline or external), and there can be any number of
	    test cases for that grammar.</p>
	    <p>The <span class="gi">grammar-test</span> element can be used to
	    specify that the grammar itself is to be treated as a test
	    case and parsed or checked against the grammar for ixml
	    grammars.  In this case, the test set may contain no
	    test cases.</p>
	    <p>Test sets can be nested to reflect any desired
	    structure for the test suite.  Nested test sets can take
	    the form of child <span class="gi">test-set</span> elements or of child
	    <span class="gi">test-set-ref</span> elements, which give the URI of a
	    subordinate test set.  (In practice the test set reference
	    is usually to an XML document rooted in
	    <span class="gi">test-catalog</span>, rather than <span class="gi">test-set</span>, but
	    the effect is the same: all test sets in the external
	    resource are logically subordinate to the parent of the
	    <span class="gi">test-set-ref</span> element.)</p>
	    <p>When test sets are nested, the child test set can
	    inherit or override the grammar specified by its parent.
	    For this reason, the specification of a grammar is
	    optional.  The only requirement is that for every test
	    case, at least one of the enclosing test sets must specify
	    a grammar; the first one found, when ascending from the
	    test case, is the one used.</p>
	  </div>
	  
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">test-set-ref</h3><div class="spec-content">
	  <div class="block gloss">(i.e. reference to an external test set)</div>
	  <div class="desc">points to an external resource with a set of test
	  cases.</div>
	  <div class="attList"><p><b>Attributes</b></p>
	    <div class="attDef"><p><span class="attname">href</span></p>
	      <div class="desc">contains a URI at which the external test set
	      can be found.</div>
	    </div>
	  </div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>Despite the name of the element, the usual target of a
	    <span class="gi">test-set-ref</span> element will be a document rooted in
	    a <span class="gi">test-catalog</span> element.</p>
	  </div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">test-string</h3><div class="spec-content">
	  <div class="desc">contains a string to be used as input in a test
	  case.</div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>If the string is long or otherwise inconvenient
	    to include literally in the test catalog,
	    the <span class="gi">test-string-ref</span> element may be
	    used instead.</p>
	  </div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">test-string-ref</h3><div class="spec-content">
	  <div class="desc">points to a string to be used as input in a test
	  case.</div>
	
	  <div class="attList"><p><b>Attributes</b></p>
	    <div class="attDef"><p><span class="attname">href</span></p>
	      <div class="desc">contains a URI at which the external input
	      can be found.</div>
	    </div>
	  </div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>If the string is short and simple, it may be more
	    convenient to include it directly in the test catalog;
	    when this is so, the <span class="gi">test-string</span> element may be
	    used instead of the <span class="gi">test-string-ref</span> element.</p>
	  </div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">vxml-grammar</h3><div class="spec-content">
	  <div class="block gloss">(i.e. reference to grammar in visible-XML form)</div>
	  <div class="desc">contains a grammar in XML form.</div>
	  <div class="remarks"><p><b>Remarks</b></p>
	    <p>Note that the schema for test catalogs does not
	    constrain the XML used in the content of this element; in
	    cases where the purpose of the test is to check the
	    behavior of a processor when given XML input which is not
	    a valid XML representation of an ixml grammar, the XML
	    content of the <span class="gi">vxml-grammar</span> element will not in
	    fact conform to the schema for the XML form of ixml
	    grammars.</p>

	    <p>The grammar for a test set may be given in any of
	    several ways:
	    <ul>
	      <li>
		<p>in ixml form inline, using an <span class="gi">ixml-grammar</span>
		element, or</p>
	      </li>
	      <li>		
		<p>in ixml form in an external resource, using an
		<span class="gi">ixml-grammar-ref</span> element, or</p>
	      </li>
	      <li>
		<p>in XML form inline, using the <span class="gi">vxml-grammar</span>
		element, or</p>
	      </li>
	      <li>
		<p>in XML form in an external resource, using the
		<span class="gi">vxml-grammar-ref</span> element.</p>
	      </li>
	    </ul>
	    Here, <span class="mentioned">vxml</span> is short for
	    <span class="gloss">‘visible XML’</span>, as distinct from
	    <span class="gloss">‘invisible XML’</span>.</p>
	  </div>
	</div></div>
	
	<div class="elementSpec"><h3 class="spec-label element">vxml-grammar-ref</h3><div class="spec-content">
	  <div class="block gloss">(i.e. reference to grammar in visible-XML form)</div>
	  <div class="desc">points to a grammar in XML form.</div>
	  <div class="attList"><p><b>Attributes</b></p>
	    <div class="attDef"><p><span class="attname">href</span></p>
	      <div class="desc">contains a URI at which the external grammar
	      can be found.</div>
	    </div>
	  </div>
	  <div class="remarks"><p><b>Remarks</b></p>	  
	    <p>The grammar for a test set may be given in any of
	    several ways:
	    <ul>
	      <li>
		<p>in ixml form inline, using an <span class="gi">ixml-grammar</span>
		element, or</p>
	      </li>
	      <li>		
		<p>in ixml form in an external resource, using an
		<span class="gi">ixml-grammar-ref</span> element, or</p>
	      </li>
	      <li>
		<p>in XML form inline, using the <span class="gi">vxml-grammar</span>
		element, or</p>
	      </li>
	      <li>
		<p>in XML form in an external resource, using the
		<span class="gi">vxml-grammar-ref</span> element.</p>
	      </li>
	    </ul>
	    Here, <span class="mentioned">vxml</span> is short for
	    <span class="gloss">‘visible XML’</span>, as distinct from
	    <span class="gloss">‘invisible XML’</span>.</p>
	  </div>
	</div></div>

	
      </div>
    </div>
  </div>
</div>
  </body>
</html>
